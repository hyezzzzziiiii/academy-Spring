package com.ezen.shop.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.ezen.shop.dto.OrderVO;
import com.ezen.shop.dto.Paging;
import com.ezen.shop.dto.ProductVO;
import com.ezen.shop.service.A_adminService;
import com.ezen.shop.service.ProductService;
import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;

@Controller
public class A_adminController {

	@Autowired
	A_adminService as;
	@Autowired
	ProductService ps;
	
	@Autowired
	ServletContext context;
	

	@RequestMapping("adminProductDetail")
	public ModelAndView product_detail(HttpServletRequest request
			@RequestParam("pseq") String pseq) {
		ModelAndView mav = new ModelAndView();
		ProductVO pvo = ps.getProduct(pseq);
		mav.addObject("productVO",pvo);
		
		String kindList[] = { "0", "Heels", "Boots", "Sandals", "Slipers", "Shcakers", "Sale" };
		int index = Integer.parseInt(pvo.getKind());
		mav.addObject("kind", kindList[index]);
		mav.setViewName("admin/product/productDetail");
		return mav;
	}
	
	@RequestMapping("productWrite")
	public String productwrite(HttpServletRequest request) {
		String savePath = context.getRealPath("resources/product_images");
		try {
			MultipartRequest multi = new MultipartRequest(request, savePath,
					5*1024*1024, "UTF-8", new DefaultFileRenamePolicy());
			ProductVO pvo = new ProductVO();
			pvo.setKind(multi.getParameter("kind"));
			pvo.setKind(multi.getParameter("kind"));
		    pvo.setName(multi.getParameter("name"));
		    pvo.setPrice1(Integer.parseInt(multi.getParameter("price1")));
		    pvo.setPrice2(Integer.parseInt(multi.getParameter("price2")));
		    pvo.setPrice3(Integer.parseInt(multi.getParameter("price2"))
		    	        - Integer.parseInt(multi.getParameter("price1")));
		    pvo.setContent(multi.getParameter("content"));
		    pvo.setImage(multi.getFilesystemName("image"));
			as.insertProduct(pvo);
		}catch(IOException e) {
			e.printStackTrace();
		}
		return "redirect:/productList";
	}
	
	@RequestMapping("productWriteForm")
	public ModelAndView productWriteForm(HttpServletRequest request) {
		String kindList[] = { "Heels", "Boots", "Sandals", "Shcakers", "Slipers",  "Sale" };
		ModelAndView mav = new ModelAndView();
		mav.addObject("kindList", kindList);
		mav.setViewName("admin/product/productWriteForm");
		return mav;
		
	}
	
	@RequestMapping("adminOrderList")
	public ModelAndView orderList(HttpServletRequest request) {
		ModelAndView mav = new ModelAndView();
		HttpSession session = request.getSession();
		String id = (String)session.getAttribute("workId");
		int page = 1;
		if(id==null)
			mav.setViewName("redirect:/admin01");
		else {
			if(request.getParameter("first")!=null) {
				session.removeAttribute("page");
				session.removeAttribute("key");		
			}
			String key = "";
			if(request.getParameter("key")!=null) {
				key = request.getParameter("key");
				session.setAttribute("key", key);
			}else if(session.getAttribute("key")!=null) {
				key = (String)session.getAttribute("key");
			}else {
				session.removeAttribute("key");
				key="";
			}
			
			if(request.getParameter("page")!=null) {
				page = Integer.parseInt(request.getParameter("page"));
				session.setAttribute("page", page);
			}else if( session.getAttribute("page")!= null ) {
				page = (int) session.getAttribute("page");
			}else {
				page = 1;
				session.removeAttribute("page");
			}
				Paging paging = new Paging();
				paging.setPage(page);
				int count=as.getAllcount("order_view", "mname", key);
				paging.setTotalCount(count);
				List<OrderVO> orderList = as.listOrder(paging, key);
				mav.addObject("paging", paging);
				mav.addObject("key", key);
				mav.addObject("orderList", orderList);
				mav.setViewName("admin/order/orderList");
			}
			return mav;
		}
		
	
	@RequestMapping("productList")
	public ModelAndView product_list(HttpServletRequest request) {
		ModelAndView mav = new ModelAndView();
		HttpSession session = request.getSession();
		String id = (String)session.getAttribute("workId");
		
		int page = 1;
		if(id == null)
			mav.setViewName("redirect:/admin01");
		
		else {
			if(request.getParameter("first")!=null) {
				session.removeAttribute("page");
				session.removeAttribute("key");
			}
			
			String key="";
			if(request.getParameter("key") != null) {
				key= request.getParameter("key");
				session.setAttribute("key", key);
			}else if(session.getAttribute("key")!= null) {
				key = (String)session.getAttribute("key");
			}else {
				session.removeAttribute("key");
				key="";
			}
			
			if(request.getParameter("page")!= null) {
				page = Integer.parseInt((request.getParameter("page"));
				session.setAttribute("page", page);
			}else if(session.getAttribute("page")!= null) {
				page = (int)session.getAttribute("page");
			}else {
				page=1;
				session.removeAttribute("page");
			}
			
			Paging paging = new Paging();
			paging.setPage(page);
			int count = as.getAllcount("product", "name", key);
			paging.setTotalCount(count);
			List<ProductVO> productList = as.listProduct(paging, key);
			mav.addObject("paging", paging);
			mav.addObject("key", key);
			mav.addObject("productList", productList);
			mav.setViewName("admin/product/productList");
		}
	return mav;
	}
	
	@RequestMapping("admin01")
	public ModelAndView admin_login(Model model, HttpServletRequest request,
			@RequestParam("workId") String workId,
			@RequestParam("workPwd") String workPwd) {
		ModelAndView mav = new ModelAndView();
		String msg="";
		int result=as.workercheck(workId, workPwd);
		if(result==1) {
			HttpSession session = request.getSession();
			session.setAttribute("workId", workId);
			mav.setViewName("redirect:/productList");
		}else if(result ==0) {
			msg="비밀번호를 확인하세요";
			mav.addObject("message", msg);
			mav.setViewName("admin/aLoginForm");
			
		}else if(result==-1) {
			msg ="아이디를 확인하세요.";
			mav.addObject("message", msg);
			mav.setViewName("admin/aLoginForm");
		}
		return mav;
	}
	
	@RequestMapping("/aadmin")
	public String admin() {
		return "admin/aLoginForm";
	}
}
